{%- set pretrain_jid= "pretrain_jid"+ idx|string -%}
echo "Submitting Jobs for {{ name }}"
tensorize_jid{{idx}}=$(sbatch --parsable --job-name={{ name }}_tensorize {{ PreTrain.path }})
echo "Submitted Tensorize (id=$tensorize_jid{{idx}})"
echo "scancel $tensorize_jid{{idx}}" >> generated_experiments/cancel_jobs.sh
{{ pretrain_jid }}=$(sbatch --parsable --job-name={{ name }}_pretrain \
	deepspeed_multi_gpu.sbatch {{ PreTrain.path }})
echo "Submitted PreTrain (id=${{ pretrain_jid }})"
echo "scancel ${{ pretrain_jid }}" >> generated_experiments/cancel_jobs.sh
train_jid{{ idx}}=$(sbatch --parsable --dependency=afterok:${{pretrain_jid}} \
	--job-name={{ name }}_finetune {{ train_sbatch }}.sbatch {{ FineTune.path}})
echo "Submitted Train (id=$train_jid{{ idx}})"
echo "scancel $train_jid{{idx}}" >> generated_experiments/cancel_jobs.sh
eval_jid{{idx}}=$(sbatch --parsable --job-name={{ name }}_eval \
	--dependency=afterok:$train_jid{{ idx}} eval.sbatch \
	{{ Eval.model_path }} {{ num_return_sequences }} {{ Eval.path }})
echo "Submitted Eval $eval_jid{{idx}} to run after $1(id=$train_jid{{ idx}})"
echo "scancel $eval_jid{{idx}}" >> generated_experiments/cancel_jobs.sh
exec_jid{{idx}}=$(sbatch --parsable --job-name='{{ name }}_execute' --dependency=afterok:$eval_jid{{idx}} eval_code.sbatch eval_results/{{ task_name }} {{ Eval.save_name }})
echo "scancel $exec_jid{{idx}}" >> generated_experiments/cancel_jobs.sh
echo ""