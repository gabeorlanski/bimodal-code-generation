
{%- set pretrain_jid= "pretrain_jid"+ idx|string -%}
{%- set get_info_jid= "get_info_"+ idx|string -%}

##############################################################################################

echo "Submitting Jobs for {{ job_name }}"


#{{ pretrain_jid }}=$(sbatch --parsable --job-name={{ job_name }}_pretrain \
#	deepspeed_multi_gpu.sbatch {{ PreTrain.path }})
#echo "Submitted PreTrain (id=${{ pretrain_jid }})"


# Human Eval After PreTrain
he_so{{idx}}=$(sbatch --job-name='{{ job_name }}_he' --parsable \
	run_human_eval.sbatch {{ HumanEval.path }})
echo "Submitted HumanEval (id=$he_so{{idx}})"
echo "scancel $he_so{{idx}}" >> generated_experiments/cancel_jobs.sh

# Human Eval Code Execute Zero Shot
he_exec{{idx}}=$(sbatch --parsable --job-name='{{ job_name }}_he_execute' \
	eval_code.sbatch \
	eval_results/HUMAN_EVAL {{ PreTrain.save_name }} test.jsonl
)
echo "Submitted CodeEval(id=$he_exec{{idx}})"
echo "scancel $he_exec{{idx}}" >> generated_experiments/cancel_jobs.sh

# Finetuning
train_jid{{ idx}}=$(sbatch --parsable \
#	--dependency=afterok:${{pretrain_jid}} \
	--job-name={{ job_name }}_finetune {{ train_sbatch }}.sbatch {{ FineTune.path}})
echo "Submitted Train (id=$train_jid{{ idx}})"
echo "scancel $train_jid{{idx}}" >> generated_experiments/cancel_jobs.sh


# Human Eval After Finetune
hef_so{{idx}}=$(sbatch --job-name='{{ job_name }}_fhe_eval' --parsable \
	--dependency=afterok:$train_jid{{ idx}} \
	run_human_eval.sbatch {{ HEFineTune.path }})
echo "Submitted HumanEvalFinetune (id=$hef_so{{idx}})"
echo "scancel $hef_so{{idx}}" >> generated_experiments/cancel_jobs.sh

# Human Eval Code Execute after FineTune
hef_exec{{idx}}=$(sbatch --parsable --job-name='{{ job_name }}_hef_execute' \
	--dependency=afterok:$hef_so{{idx}} \
	eval_code.sbatch \
	eval_results/HUMAN_EVAL MBPP.{{ name }}.{{ ablation_name }}.HEFineTune test.jsonl
)
echo "Submitted CodeEval(id=$hef_exec{{idx}})"
echo "scancel $hef_exec{{idx}}" >> generated_experiments/cancel_jobs.sh

# Normal Eval
eval_jid{{idx}}=$(sbatch --parsable --job-name={{ job_name }}_eval \
	--dependency=afterok:$train_jid{{ idx}} eval.sbatch \
	{{ Eval.model_path }} {{ num_return_sequences }} {{ Eval.path }})
echo "Submitted Eval $eval_jid{{idx}} to run after $1(id=$train_jid{{ idx}})"
echo "scancel $eval_jid{{idx}}" >> generated_experiments/cancel_jobs.sh

# Normal Code Execute After Eval
exec_jid{{idx}}=$(sbatch --parsable --job-name='{{ job_name }}_execute' \
	--dependency=afterok:$eval_jid{{idx}} \
	eval_code.sbatch eval_results/{{ task_name }} {{ Eval.save_name }})
echo "Submitted CodeEval(id=exec_jid{{idx}})"
echo "scancel $exec_jid{{idx}}" >> generated_experiments/cancel_jobs.sh

echo ""
