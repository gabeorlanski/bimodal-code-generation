{"answers": {"19077": {"line": 12019, "body": "<p>Make <code>ultrasoundValue</code> an array and use <code>i</code> as the index to it? Just like you have with all your other arrays?</p>\n\n<p>You obviously know how to use arrays, since you have already been using them throughout your code.</p>\n", "result": "PASS", "type": 2, "id": "19077", "date": "2015-12-29T19:49:20.293", "score": 0, "comment_count": 0, "parent_id": "19076"}, "19079": {"line": 12021, "body": "<p>You don't even have to add any lines, just modify a couple!</p>\n\n<pre><code>unsigned long ultrasoundValue [2]; //creates an array of unsigned longs of size 2\n</code></pre>\n\n<p>...and inside your for loop:</p>\n\n<pre><code>ultrasoundValue[i] = ping(i);\n</code></pre>\n\n<p>It appears you are acquiring 2 separate ultrasound values. If you'd like to store multiple sets of these 2 values, you could use a two-dimensional array:</p>\n\n<pre><code>unsigned long ultrasoundValue [10][2]; //an array of 10 pairs of long unsigned values\n</code></pre>\n\n<p>...and you could modify your for loop to have a pair of nested for loops:</p>\n\n<pre><code> for (int i = 0; i &lt; 10; i++)\n {\n   for (int j = 0; j &lt; 2; j++)\n   {\n      ultrasoundValue[i][j] = ping(j);\n      //do whatever else\n   }\n } \n</code></pre>\n", "result": "PASS", "type": 2, "id": "19079", "date": "2015-12-29T20:05:28.737", "score": 1, "comment_count": 0, "parent_id": "19076"}}, "line": 12018, "body": "<p>My goal is to store the variable in the for loop as an array rather than as a single 'ultrasoundValue'. Can some one help me structure the code?</p>\n\n<p>I have this code: </p>\n\n<pre><code>int ultraSoundSignalPins[] = {5,7}; \nint tx = 4;\nchar *pingString[] = {\"Ping1 \",\"Ping2 \"}; // just something to print to             indicate direction\n\nvoid setup()\n{\n Serial.begin(9600);\n}\n\nvoid loop()\n{\n\n unsigned long ultrasoundValue;\n for(int i=0; i &lt; 2; i++)\n {\n   ultrasoundValue = ping(i);\n   Serial.print(pingString[i]);\n   Serial.print(ultrasoundValue);\n   Serial.print(\"cm, \");    \n   delay(500);\n\n }\n} \n\n//Ping function\nunsigned long ping(int i)\n{\n unsigned long echo;\n\n pinMode(ultraSoundSignalPins[i], OUTPUT); // Switch signalpin to output\n pinMode(tx, OUTPUT);          \n digitalWrite(ultraSoundSignalPins[i], LOW); // Send low pulse\n digitalWrite(tx, LOW); \n delayMicroseconds(2); // Wait for 2 microseconds\n digitalWrite(ultraSoundSignalPins[i], HIGH); // Send high pulse\n digitalWrite(tx, HIGH);\n delayMicroseconds(5); // Wait for 5 microseconds\n digitalWrite(ultraSoundSignalPins[i], LOW); // Holdoff\n pinMode(ultraSoundSignalPins[i], INPUT); // Switch signalpin to input\n digitalWrite(ultraSoundSignalPins[i], HIGH); // Turn on 0pullup resistor\n echo = pulseIn(ultraSoundSignalPins[i], HIGH); //Listen for echo\n return (echo / 29.1); //convert to CM then to inches\n}\n</code></pre>\n", "result": "PASS", "type": 1, "id": "19076", "date": "2015-12-29T19:47:21.117", "score": 0, "comment_count": 0, "tags": ["array"], "title": "Declare for loop as an array of variables", "answer_count": 2, "views": 841, "accepted_answer": null}
{"answers": {"19749": {"line": 12596, "body": "<p>Make <code>newArray</code> be a pointer to whichever array you wish to work with.  For example:</p>\n\n<pre><code>int myArray1[] = {0, 2, 4, 5, 7, 9, 11};\nint myArray2[] = {0, 2, 3, 5, 7, 8, 10};\nint myArray3[] = {0, 3, 5, 6, 7, 10};\n\nint *newArray = myArray2;\n\n// ... work with selected array, via newArray[] subscripting\n</code></pre>\n\n<p>Note, you may need to set an array-length variable at the same time as choosing the array.</p>\n\n<p>For example:</p>\n\n<pre><code>int *newArray = myArray2;\nint newSize = sizeof(myArray2)/sizeof myArray2[0];\n\n// ... work with selected array\n\nnewArray = myArray3;\nnewSize = sizeof(myArray3)/sizeof myArray3[0];\n// ... work with selected array\n</code></pre>\n\n<p>Alternately, add an array-end marker at the end of each array (eg, a negative number), or more elegantly, make all the arrays the same length.</p>\n\n<p>If you want to make a new copy of the original array, such that modifying the new array won't change the old, use (eg) <code>memcpy()</code>.  For example:</p>\n\n<pre><code>int newArray[7];\n...\nmemcpy(newArray, myArray2, sizeof(myArray2));\n</code></pre>\n\n<p>Note that <code>memcpy()</code>'s size argument is given in bytes.  Also, if you need to declare <code>memcpy()</code> [I don't recall whether it's automatically declared in the Arduino environment], add <code>#include &lt;string.h&gt;</code> up front.</p>\n", "result": "PASS", "type": 2, "id": "19749", "date": "2016-01-19T17:31:40.400", "score": 3, "comment_count": 10, "parent_id": "19748"}}, "line": 12595, "body": "<p>This may be an easy question, and if so im sorry, but i couldn't find out how to do this. I've programmed in python before and hoped that this would work, but it don't.</p>\n\n<pre><code>int myArray1[] = {0, 2, 4, 5, 7, 9, 11};\nint myArray2[] = {0, 2, 3, 5, 7, 8, 10};\nint myArray3[] = {0, 3, 5, 6, 7, 10};\n\nint newArray[] = myArray2;\n</code></pre>\n\n<p>I wanted to only have to change one place in my code, which of the first three arrays i want my new array to take values from. Do anyone have any suggestions on how to do this? </p>\n", "result": "PASS", "type": 1, "id": "19748", "date": "2016-01-19T17:05:00.150", "score": 3, "comment_count": 2, "tags": ["array"], "title": "Copy content of array", "answer_count": 1, "views": 22506, "accepted_answer": null}
{"answers": {"23861": {"line": 15906, "body": "<p>As for your question, your way is (kind of) the best way.</p>\n\n<p>I just saw a problem: when you keep the button pressed you will go on showing. Moreover I really don't like the delay at the end, and if its purpose is just to avoid bounces, well, use the Bounce2 class.</p>\n\n<p>As for the repeated <code>if</code>s, I prefer a <code>switch-case</code> statement.</p>\n\n<p>I highly suggest you to use the Bounce2 class, though. Here is an example of its usage:</p>\n\n<pre><code>Bounce debouncer = Bounce(); \n\nvoid setup()\n{\n    ...\n    pinMode(buttonPin, INPUT);\n    debouncer.attach(buttonPin);\n    debouncer.interval(5); // interval in ms\n}\n\nvoid loop()\n{\n    debouncer.update();\n    if (debouncer.rose())\n    {\n        switch (state)\n        {\n        case 0:\n            {\n                int x;\n                for (x=0; x &lt;= 4; x++)\n                {\n                    Serial.println(\" \");\n                    Serial.print(titles[x]);\n                    Serial.print(\" \");\n                    Serial.print(user_info[x]);\n                }\n                Serial.println(\" \");\n                setLights(HIGH, LOW, LOW, LOW);\n                state = 1;\n            }\n            break;\n        case 1:\n        ...\n        }\n    }\n}\n</code></pre>\n\n<p>As you can see the class has a <code>rose</code> member, which tells you if the button was just pressed (only on the rising edge).</p>\n\n<p>Now, your particular problem can be solved in another way. Since you are repeating the same code for all the cases, you can cycle through two arrays; one stating which is the second array you need to use, the other the lights.</p>\n\n<p>This is an example. Please note that I haven't tested it, so there might be some errors</p>\n\n<pre><code>char ** second_array[] = { user_info, econ_one, econ_two, econ_three }\nuint8_t lights[][4] {   {HIGH, LOW, LOW, LOW},\n                        {LOW, HIGH, LOW, LOW},\n                        {LOW, LOW, HIGH, LOW},\n                        {LOW, LOW, LOW, HIGH},\n                    }\n\nvoid loop()\n{\n    debouncer.update();\n    if (debouncer.rose())\n    {\n        int x;\n        for (x=0; x &lt;= 4; x++)\n        {\n            Serial.println(\" \");\n            Serial.print(titles[x]);\n            Serial.print(\" \");\n            Serial.print(second_array[state][x]);\n        }\n        Serial.println(\" \");\n        setLights(lights[state][0], lights[state][1], lights[state][2], lights[state][3]);\n        state++;\n        if (state &gt;= 4)\n            state = 0;\n    }\n}\n</code></pre>\n\n<p>Try to use it and then report back if there is some issue ;)</p>\n", "result": "PASS", "type": 2, "id": "23861", "date": "2016-05-04T09:24:59.013", "score": 0, "comment_count": 1, "parent_id": "23857"}, "23870": {"line": 15909, "body": "<p>I would recommend using multidemnsional arrays for both your contacts and your light states.</p>\n\n<pre><code>//------------------------------------------------ declare variables\n\nchar* titles[] = {\"RELATION\", \"FIRST NAME\", \"LAST NAME\", \"LOCATION\", \"PHONE NUMBER\"};\n\nchar* econs[][5] = {\n  {\"SELF\", \"JOHN\", \"SMITH\", \"FLORIDA\", \"999-888-6666\"},\n  {\"BROTHER\", \"MICHAEL\", \"SMITH\", \"FLORIDA\", \"999-888-5555\"},\n  {\"WIFE\", \"EMILY\", \"SMITH\", \"FLORIDA\", \"999-888-4444\"},\n  {\"SISTER\", \"SOPHIA\", \"ADAMS\", \"NEW YORK\", \"888-777-3333\"}\n};\n\nuint8_t lights[][4] {   {HIGH, LOW, LOW, LOW},\n  {LOW, HIGH, LOW, LOW},\n  {LOW, LOW, HIGH, LOW},\n  {LOW, LOW, LOW, HIGH},\n};\n\nint ledPinOne = 2;\nint ledPinTwo = 3;\nint ledPinThree = 4;\nint ledPinFour = 5;\nint buttonPin = 6;\nint state = 0;\n\n//------------------------------------------------ setup - set pins\nvoid setup() {\n  Serial.begin(9600);\n\n  pinMode(ledPinOne, OUTPUT);\n  pinMode(ledPinTwo, OUTPUT);\n  pinMode(ledPinThree, OUTPUT);\n  pinMode(ledPinFour, OUTPUT);\n  pinMode(buttonPin, INPUT);\n\n  Serial.println(\"Emergency Contact\");\n}\n\n//------------------------------------------------ main\nvoid loop() {\n\n\n  if (digitalRead(buttonPin))\n  {\n    if (state &gt; 3)\n      state = 0;\n\n    {\n      for (int y = 0; y &lt;= 4; y++)\n      {\n        Serial.println(\" \");\n        Serial.print(titles[y]);\n        Serial.print(\" \");\n        Serial.print(econs[state][y]);\n      }\n\n      Serial.println(\" \");\n      setLights(lights[state][0], lights[state][1], lights[state][2], lights[state][3]);\n    }\n\n    delay(1000);\n    state++;\n\n  }\n\n}\n\n\n//------------------------------------------------ function to turn LEDs on/off\n\nvoid setLights(int one, int two, int three, int four)\n{\n  digitalWrite(ledPinOne, one);\n  digitalWrite(ledPinTwo, two);\n  digitalWrite(ledPinThree, three);\n  digitalWrite(ledPinFour, four);\n}\n</code></pre>\n\n<p>I haven't tested the above, but it should provide the same result.</p>\n\n<p>As for the second part of your question, there is an autoformat tool in the Tools menu that will auto-indent your code. Ctrl-T will do the same.</p>\n", "result": "PASS", "type": 2, "id": "23870", "date": "2016-05-04T15:14:09.010", "score": 1, "comment_count": 5, "parent_id": "23857"}}, "line": 15903, "body": "<p>So. I would like to cycle through an array using a button. My current code goes through if statements when the button is pushed. In each if statement I have a loop to print out a list of strings. I am curious if there is anyway to directly cycle through an array using buttons instead of this indirect route I have taken.</p>\n\n<p>Last question - Is there a way to set the indents in the Arduino IDE to make formatting easier here?</p>\n\n<pre><code>//------------------------------------------------------------------------------------------------\n// Displays information when a push button is pressed. Also turns on and off a corresponding led.\n// 5/3/2016\n//------------------------------------------------------------------------------------------------\n\n// declare variables\n\nchar* titles[] = {\n  \"RELATION\",\n  \"FIRST NAME\",\n  \"LAST NAME\",\n  \"LOCATION\",\n  \"PHONE NUMBER\"\n};\nchar* user_info[] = {\n  \"SELF\",\n  \"JOHN\",\n  \"SMITH\",\n  \"FLORIDA\",\n  \"999-888-6666\"\n};\nchar* econ_one[] = {\n  \"BROTHER\",\n  \"MICHAEL\",\n  \"SMITH\",\n  \"FLORIDA\",\n  \"999-888-5555\"\n};\nchar* econ_two[] = {\n  \"WIFE\",\n  \"EMILY\",\n  \"SMITH\",\n  \"FLORIDA\",\n  \"999-888-4444\"\n};\nchar* econ_three[] = {\n  \"SISTER\",\n  \"SOPHIA\",\n  \"ADAMS\",\n  \"NEW YORK\",\n  \"888-777-3333\"\n};\n\nint ledPinOne = 2;\nint ledPinTwo = 3;\nint ledPinThree = 4;\nint ledPinFour = 5;\nint buttonPin = 6;\nint state = 0;\n// setup - set pins\n\nvoid setup() {\n  Serial.begin(9600);\n  pinMode(ledPinOne, OUTPUT);\n  pinMode(ledPinTwo, OUTPUT);\n  pinMode(ledPinThree, OUTPUT);\n  pinMode(ledPinFour, OUTPUT);\n  pinMode(buttonPin, INPUT);\n  Serial.println(\"Emergency Contact\");\n}\n\n// main\nvoid loop() {\n  if (digitalRead(buttonPin)) {\n    if (state == 0) {\n      int x;\n      for (x = 0; x &lt;= 4; x++) {\n        Serial.println(\" \");\n        Serial.print(titles[x]);\n        Serial.print(\" \");\n        Serial.print(user_info[x]);\n      }\n      Serial.println(\" \");\n      setLights(HIGH, LOW, LOW, LOW);\n      state = 1;\n    } else if (state == 1) {\n      int y;\n      for (y = 0; y &lt;= 4; y++) {\n        Serial.println(\" \");\n        Serial.print(titles[y]);\n        Serial.print(\" \");\n        Serial.print(econ_one[y]);\n      }\n      Serial.println(\" \");\n      setLights(LOW, HIGH, LOW, LOW);\n      state = 2;\n    } else if (state == 2) {\n      int z;\n      for (z = 0; z &lt;= 4; z++) {\n        Serial.println(\" \");\n        Serial.print(titles[z]);\n        Serial.print(\" \");\n        Serial.print(econ_two[z]);\n      }\n      Serial.println(\" \");\n      setLights(LOW, LOW, HIGH, LOW);\n      state = 3;\n    } else if (state == 3) {\n      int q;\n      for (q = 0; q &lt;= 4; q++) {\n        Serial.println(\" \");\n        Serial.print(titles[q]);\n        Serial.print(\" \");\n        Serial.print(econ_three[q]);\n      }\n      Serial.println(\" \");\n      setLights(LOW, LOW, LOW, HIGH);\n      state = 0;\n    }\n    delay(1000);\n  }\n}\n\n// function to turn LEDs on/off\n\nvoid setLights(int one, int two, int three, int four) {\n  digitalWrite(ledPinOne, one);\n  digitalWrite(ledPinTwo, two);\n  digitalWrite(ledPinThree, three);\n  digitalWrite(ledPinFour, four);\n}\n</code></pre>\n\n<p>output image</p>\n\n<p><a href=\"https://www.dropbox.com/sc/fwll0qe7cyye1mt/AAD5vI9buU_X0bl04KXFAQyja\" rel=\"nofollow noreferrer\">https://www.dropbox.com/sc/fwll0qe7cyye1mt/AAD5vI9buU_X0bl04KXFAQyja</a></p>\n", "result": "PASS", "type": 1, "id": "23857", "date": "2016-05-04T04:08:20.963", "score": 1, "comment_count": 2, "tags": ["array"], "title": "Using a button to cycle an array", "answer_count": 2, "views": 2327, "accepted_answer": null}
