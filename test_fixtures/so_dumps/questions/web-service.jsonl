{"answers": {"174": {"line": 169, "body": "<p>There is the <a href=\"https://github.com/interactive-matter/aJson\" rel=\"nofollow\">aJson</a> library that allows you to work with JSON objects in Arduino.</p>\n\n<p>However, depending on the complexity of your program, I would just do it manually to save memory. You may be able to just copy the functions you want out of the library.</p>\n\n<p>Then check out the <a href=\"http://playground.arduino.cc/Code/WebClient\" rel=\"nofollow\">WebClient</a> library which has an example for making a POST request at the bottom.</p>\n", "result": "PASS", "type": 2, "id": "174", "date": "2014-02-13T19:15:23.713", "score": 4, "comment_count": 0, "parent_id": "36"}, "23585": {"line": 15704, "body": "<p>Check <a href=\"http://playground.arduino.cc/Code/WebClient\" rel=\"nofollow\">this</a> from Arduino docs. </p>\n\n<p>In the \"Post method request\" code example just define your JSON as plain text like <code>char jsonData[] = \"{name: 'yourName', data: 'yourData'}\"</code> for example, and then call <code>byte postPage(char* domainBuffer,int thisPort,char* page,char* thisData)</code> function passing \"jsonData\" variable defined before for \"thisData\" parameter.</p>\n\n<p>It worked for me, hope it helps.</p>\n", "result": "PASS", "type": 2, "id": "23585", "date": "2016-04-26T16:01:24.773", "score": 1, "comment_count": 0, "parent_id": "36"}}, "line": 37, "body": "<p>If you want to submit sensor data such as temperature to a remote server/database somewhere you need to use some kind of call to a web server since it isn't possible to connect directly to a database from the Arduino.</p>\n\n<p>How do you post data to a JSON web service from an Arduino that's connected to the Internet?</p>\n", "result": "PASS", "type": 1, "id": "36", "date": "2014-02-12T02:59:15.323", "score": 13, "comment_count": 2, "tags": ["web-service"], "title": "Post Data To a Web Service From Arduino", "answer_count": 2, "views": 32448, "accepted_answer": "174"}
{"answers": {"84": {"line": 82, "body": "<p>It depends on your skills and what you have in your Arduino \"box\".\nLet's assume you have an ethernet or WiFi shield.</p>\n\n<p>I would go with a PHP script (I'm a PHP dev, but any language will fit) that accepts POST requests sent by the board and store them in a SQLite db.</p>\n\n<p><strong>Why SQLite instead of MySQL?</strong> Well, it's just a matter of data portability. You copy the SQLite file or send it via email and you're done: there are plenty of clients out there to read your db, in *nix based machines is frequently integrated in the OS. </p>\n\n<p>MySQL requires a sort of \"infrastructure\" to be written/read.</p>\n", "result": "PASS", "type": 2, "id": "84", "date": "2014-02-12T09:55:52.400", "score": 4, "comment_count": 0, "parent_id": "57"}}, "line": 58, "body": "<p>I have not already started to try but I'm a good webmaster and I'm just asking which way is more suitable for sending and keeping data from sensors and I/0 state in a database.</p>\n\n<p>Here are some points:</p>\n\n<ul>\n<li>Post versus get</li>\n<li>MySQL or others types</li>\n<li>Security layers</li>\n<li>Graphics render of data's (google API?)</li>\n<li>PHP, ruby, JavaScript...</li>\n<li>Able to send data request's to Arduino's</li>\n<li>Ethernet shield, wifi, I2c ???</li>\n<li>Access via Android app...</li>\n</ul>\n\n<p>Anyway, the goal here is to know pros and cons of integrate all my Arduino through database.</p>\n", "result": "PASS", "type": 1, "id": "57", "date": "2014-02-12T05:21:37.753", "score": -4, "comment_count": 1, "tags": ["web-service"], "title": "What's the best way to put in a database sensors data's", "answer_count": 1, "views": 787, "accepted_answer": "84"}
{"answers": {"4319": {"line": 2951, "body": "<p>Yes.</p>\n\n<p>If you're using an Ethernet Shield, you should be able to run a webserver on the Arduino and simple do an HTTP request from your C# webservice to the Arduino.</p>\n\n<p>Check this tutorial on how to write a webserver for arduino using the ethernet shield: <a href=\"http://arduino.cc/en/Tutorial/WebServer\" rel=\"nofollow\">http://arduino.cc/en/Tutorial/WebServer</a></p>\n\n<p>Doing an HTTP request of any kind from C# should be easy enough and is not in the scope of this site.</p>\n", "result": "PASS", "type": 2, "id": "4319", "date": "2014-09-24T10:12:10.070", "score": 2, "comment_count": 0, "parent_id": "4308"}}, "line": 2943, "body": "<p>I have a project in Microsoft Visual Studio C# and I have to pass JSON data to my Arduino via Ehternet Shield.  </p>\n\n<p>This is how it works:<br>\n<img src=\"https://i.stack.imgur.com/FIqpE.png\" alt=\"enter image description here\"></p>\n\n<p>Is it possible? How to do it?</p>\n", "result": "PASS", "type": 1, "id": "4308", "date": "2014-09-23T22:38:26.387", "score": 0, "comment_count": 0, "tags": ["web-service"], "title": "Webservice C# JSON to Arduino", "answer_count": 1, "views": 1358, "accepted_answer": null}
{"answers": {"29468": {"line": 19120, "body": "<p>You can try the AWS IoT Embedded C SDK, that is for more general devices.\nOther Arduinos requires a crypto library and a device powerful enough, maybe PI, to support the authentication process...\nAt this time they have no crypto library like the YUN SDK, for other Arduinos...</p>\n\n<p><a href=\"https://github.com/aws/aws-iot-device-sdk-embedded-C/blob/master/README.md\" rel=\"nofollow\">Try it...</a></p>\n", "result": "PASS", "type": 2, "id": "29468", "date": "2016-09-21T22:08:50.820", "score": 1, "comment_count": 0, "parent_id": "29465"}}, "line": 19117, "body": "<p>I started to work with AWS IoT today, which offers a MQTT based connection to their web service. They officially only have a demo for the Arduino Yun, which is rather expensive. Has someone managed to get it running (e.g. with a NodeMCU with a ESP8266)?</p>\n", "result": "PASS", "type": 1, "id": "29465", "date": "2016-09-21T20:31:06.993", "score": 1, "comment_count": 1, "tags": ["web-service"], "title": "Is there a library to use Amazon IoT services on any Arduino?", "answer_count": 1, "views": 546, "accepted_answer": null}
